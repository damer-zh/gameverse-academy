import Header from '@/components/Header';
import CourseCard from '@/components/CourseCard';
import { User, Calendar, Trophy, BookOpen, Target, Settings, Edit2, Star } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { enrolledCourses } from '@/data/mockCourses';

const Profile = () => {
  const user = {
    name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
    email: 'alexander.petrov@example.com',
    avatar: '–ê–ü',
    joinDate: '2023-08-15',
    level: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
    totalXP: 2450,
    nextLevelXP: 3000,
    streak: 15,
    completedCourses: 8,
    inProgressCourses: 3,
    totalHours: 156
  };

  const achievements = [
    {
      id: '1',
      title: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
      description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∫—É—Ä—Å',
      icon: 'üéØ',
      earned: true,
      earnedDate: '2023-09-01'
    },
    {
      id: '2',
      title: 'Unity –ú–∞—Å—Ç–µ—Ä',
      description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 5 –∫—É—Ä—Å–æ–≤ –ø–æ Unity',
      icon: 'üéÆ',
      earned: true,
      earnedDate: '2023-11-15'
    },
    {
      id: '3',
      title: '–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü',
      description: '–£—á–∏—Ç–µ—Å—å 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
      icon: 'üèÉ‚Äç‚ôÇÔ∏è',
      earned: false,
      progress: 50
    },
    {
      id: '4',
      title: '–ü–æ–º–æ—â–Ω–∏–∫ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
      description: '–ü–æ–ª—É—á–∏—Ç–µ 50 –ª–∞–π–∫–æ–≤ –Ω–∞ –æ—Ç–≤–µ—Ç—ã',
      icon: 'ü§ù',
      earned: false,
      progress: 32
    }
  ];

  const learningStats = [
    {
      period: '–≠—Ç–∞ –Ω–µ–¥–µ–ª—è',
      hours: 12,
      lessons: 8,
      assignments: 2
    },
    {
      period: '–≠—Ç–æ—Ç –º–µ—Å—è—Ü',
      hours: 48,
      lessons: 32,
      assignments: 7
    },
    {
      period: '–í—Å–µ–≥–æ',
      hours: 156,
      lessons: 124,
      assignments: 23
    }
  ];

  const recentActivity = [
    {
      type: 'course_completed',
      title: '–ó–∞–≤–µ—Ä—à–µ–Ω –∫—É—Ä—Å "Unity –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö"',
      date: '2024-01-12',
      icon: '‚úÖ'
    },
    {
      type: 'achievement',
      title: '–ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ "Unity –ú–∞—Å—Ç–µ—Ä"',
      date: '2024-01-10', 
      icon: 'üèÜ'
    },
    {
      type: 'assignment_submitted',
      title: '–°–¥–∞–Ω–æ –∑–∞–¥–∞–Ω–∏–µ "–°–æ–∑–¥–∞–Ω–∏–µ 2D –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä–∞"',
      date: '2024-01-08',
      icon: 'üìã'
    },
    {
      type: 'course_started',
      title: '–ù–∞—á–∞—Ç –∫—É—Ä—Å "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è Unity —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"',
      date: '2024-01-05',
      icon: 'üöÄ'
    }
  ];

  const getLevelProgress = () => {
    return ((user.totalXP / user.nextLevelXP) * 100);
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric'
    });
  };

  return (
    <div className="min-h-screen bg-background">
      <Header />
      
      <main className="container mx-auto px-4 py-8">
        {/* Profile Header */}
        <div className="glass-card p-6 rounded-lg mb-8">
          <div className="flex flex-col md:flex-row items-start md:items-center gap-6">
            {/* Avatar and Basic Info */}
            <div className="flex items-center gap-4">
              <Avatar className="w-20 h-20">
                <AvatarFallback className="bg-accent/20 text-accent text-2xl font-bold">
                  {user.avatar}
                </AvatarFallback>
              </Avatar>
              
              <div>
                <h1 className="text-2xl font-bold text-foreground mb-1">{user.name}</h1>
                <p className="text-muted-foreground text-sm mb-2">{user.email}</p>
                <Badge variant="secondary" className="bg-accent/20 text-accent">
                  {user.level}
                </Badge>
              </div>
            </div>

            {/* Stats */}
            <div className="flex-1 grid grid-cols-2 md:grid-cols-4 gap-4">
              <div className="text-center">
                <div className="text-xl font-bold text-accent">{user.totalXP}</div>
                <div className="text-xs text-muted-foreground">–û–ø—ã—Ç</div>
              </div>
              <div className="text-center">
                <div className="text-xl font-bold text-accent">{user.streak}</div>
                <div className="text-xs text-muted-foreground">–î–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
              </div>
              <div className="text-center">
                <div className="text-xl font-bold text-accent">{user.completedCourses}</div>
                <div className="text-xs text-muted-foreground">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</div>
              </div>
              <div className="text-center">
                <div className="text-xl font-bold text-accent">{user.totalHours}—á</div>
                <div className="text-xs text-muted-foreground">–í—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏</div>
              </div>
            </div>

            {/* Actions */}
            <div className="flex flex-col gap-2">
              <Button size="sm">
                <Edit2 className="w-4 h-4 mr-2" />
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
              <Button variant="outline" size="sm">
                <Settings className="w-4 h-4 mr-2" />
                –ù–∞—Å—Ç—Ä–æ–π–∫–∏
              </Button>
            </div>
          </div>

          {/* Level Progress */}
          <div className="mt-6 pt-6 border-t border-border/20">
            <div className="flex items-center justify-between mb-2">
              <span className="text-sm font-medium">–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è</span>
              <span className="text-sm text-muted-foreground">
                {user.totalXP} / {user.nextLevelXP} XP
              </span>
            </div>
            <Progress value={getLevelProgress()} className="h-2" />
          </div>
        </div>

        {/* Tabs */}
        <Tabs defaultValue="courses" className="space-y-6">
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="courses">–ö—É—Ä—Å—ã</TabsTrigger>
            <TabsTrigger value="achievements">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</TabsTrigger>
            <TabsTrigger value="stats">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</TabsTrigger>
            <TabsTrigger value="activity">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</TabsTrigger>
          </TabsList>

          {/* Courses Tab */}
          <TabsContent value="courses">
            <div className="space-y-6">
              <div>
                <h2 className="text-xl font-semibold text-foreground mb-4">
                  –ê–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã ({user.inProgressCourses})
                </h2>
                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {enrolledCourses.map(course => (
                    <CourseCard key={course.id} {...course} />
                  ))}
                </div>
              </div>
              
              <div>
                <h2 className="text-xl font-semibold text-foreground mb-4">
                  –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã ({user.completedCourses})
                </h2>
                <div className="text-center py-8">
                  <Trophy className="w-12 h-12 mx-auto mb-4 text-muted-foreground" />
                  <p className="text-muted-foreground">
                    –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å
                  </p>
                </div>
              </div>
            </div>
          </TabsContent>

          {/* Achievements Tab */}
          <TabsContent value="achievements">
            <div className="grid md:grid-cols-2 gap-4">
              {achievements.map(achievement => (
                <div 
                  key={achievement.id}
                  className={`glass-card p-6 rounded-lg ${
                    achievement.earned ? 'ring-2 ring-accent/30' : 'opacity-60'
                  }`}
                >
                  <div className="flex items-start gap-4">
                    <div className="text-3xl">{achievement.icon}</div>
                    
                    <div className="flex-1">
                      <h3 className="text-lg font-semibold text-foreground mb-1">
                        {achievement.title}
                      </h3>
                      <p className="text-sm text-muted-foreground mb-3">
                        {achievement.description}
                      </p>
                      
                      {achievement.earned ? (
                        <div className="flex items-center text-sm text-accent">
                          <Trophy className="w-4 h-4 mr-2" />
                          –ü–æ–ª—É—á–µ–Ω–æ {formatDate(achievement.earnedDate!)}
                        </div>
                      ) : achievement.progress ? (
                        <div className="space-y-2">
                          <div className="flex justify-between text-sm">
                            <span className="text-muted-foreground">–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                            <span>{achievement.progress}%</span>
                          </div>
                          <Progress value={achievement.progress} className="h-2" />
                        </div>
                      ) : (
                        <Badge variant="outline">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ</Badge>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </TabsContent>

          {/* Stats Tab */}
          <TabsContent value="stats">
            <div className="grid md:grid-cols-3 gap-6">
              {learningStats.map(stat => (
                <div key={stat.period} className="glass-card p-6 rounded-lg text-center">
                  <h3 className="text-lg font-semibold text-foreground mb-4">
                    {stat.period}
                  </h3>
                  
                  <div className="space-y-4">
                    <div>
                      <div className="text-2xl font-bold text-accent">{stat.hours}—á</div>
                      <div className="text-sm text-muted-foreground">–û–±—É—á–µ–Ω–∏–µ</div>
                    </div>
                    
                    <div>
                      <div className="text-2xl font-bold text-accent">{stat.lessons}</div>
                      <div className="text-sm text-muted-foreground">–£—Ä–æ–∫–æ–≤</div>
                    </div>
                    
                    <div>
                      <div className="text-2xl font-bold text-accent">{stat.assignments}</div>
                      <div className="text-sm text-muted-foreground">–ó–∞–¥–∞–Ω–∏–π</div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </TabsContent>

          {/* Activity Tab */}
          <TabsContent value="activity">
            <div className="space-y-4">
              <h2 className="text-xl font-semibold text-foreground">
                –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
              </h2>
              
              <div className="space-y-3">
                {recentActivity.map((activity, index) => (
                  <div key={index} className="glass-card p-4 rounded-lg">
                    <div className="flex items-center gap-3">
                      <div className="text-xl">{activity.icon}</div>
                      <div className="flex-1">
                        <p className="text-sm font-medium text-foreground">
                          {activity.title}
                        </p>
                        <p className="text-xs text-muted-foreground">
                          {formatDate(activity.date)}
                        </p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </TabsContent>
        </Tabs>
      </main>
    </div>
  );
};

export default Profile;